server:
    port: 8083

spring:
    application:
        name: rates-service
    config:
        import: "optional:configserver:http://config-user:config-password@localhost:8888"
    cloud:
        config:
            uri: http://localhost:8888
            username: config-user
            password: config-password
            fail-fast: false
            retry:
                initial-interval: 2000
                max-attempts: 5
    jackson:
        default-property-inclusion: non-null
        serialization:
            write-dates-as-timestamps: false
    data:
        redis:
            host: ${REDIS_HOST:localhost}
            port: ${REDIS_PORT:6379}
            password: ${REDIS_PASSWORD:}
            database: ${REDIS_DATABASE:0}
    
    r2dbc:
        url: r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:reactive_rates_db}
        username: ${DB_USER:postgres}
        password: ${DB_PASSWORD:postgres}
        pool:
            enabled: true
            initial-size: 5
            max-size: 20
            max-idle-time: PT30M

    datasource:
        jdbcUrl: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:reactive_rates_db}
        username: ${DB_USER:postgres}
        password: ${DB_PASSWORD:postgres}
        driver-class-name: org.postgresql.Driver
    sql:
        init:
            mode: never
    liquibase:
        enabled: false
        change-log: classpath:db/changelog/db.changelog-master.xml
        url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:reactive_rates_db}
        user: ${DB_USER:postgres}
        password: ${DB_PASSWORD:postgres}

management:
    endpoints:
        web:
            exposure:
                include: health,info,prometheus
    prometheus:
        metrics:
            export:
                enabled: true

exchangerate-api:
  base-url: https://v6.exchangerate-api.com
  api-key: feedc09fac544d8041317c40
  priority: 10
  timeout: 10s
  connect-timeout: 5s

unirate-api:
    base-url: https://api.unirateapi.com
    api-key: QashoCNTEdDqrEYt2WMMvUSMo3tyJz8BHpCXkqvSSgBUbqB5ruk7lu4HvwXbp3GV
    priority: 20
    timeout: 10s
    connect-timeout: 5s

mock-provider:
  enabled: false

cache:
    enabled: true
    ttl: PT5M
    max-size: 1000

springdoc:
    api-docs:
        path: /api-docs
        enabled: true
    swagger-ui:
        path: /swagger-ui.html
        enabled: true
        display-request-duration: true
        groups-order: ASC
        operationsSorter: method
        disable-swagger-default-url: true
        doc-expansion: none
        tagsSorter: alpha
    show-actuator: false
    default-consumes-media-type: application/json
    default-produces-media-type: application/json

eureka:
    client:
        service-url:
            defaultZone: http://localhost:8761/eureka/
    instance:
        prefer-ip-address: true
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10

jwt:
  secret: mySecretKeymySecretKeymySecretKeymySecretKey

security:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8081}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

logging:
    level:
        com.reactiverates: ${LOG_LEVEL:DEBUG}
        org.springframework.web: ${LOG_LEVEL:INFO}

# OpenAPI custom configuration
openapi:
  server:
    dev:
      url: http://localhost:${server.port}
      description: Локальная среда разработки
    prod:
      url: https://api.reactiverates.com
      description: Продакшн сервер

reactive-rates:
  cache:
    ttl: ${CACHE_TTL:PT5M}
    max-size: ${CACHE_MAX_SIZE:1000}
    enabled: ${CACHE_ENABLED:true}
    use-redis: ${CACHE_USE_REDIS:true}
    key-prefix: ${CACHE_KEY_PREFIX:rates:}